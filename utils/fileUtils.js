import fs from "fs";
import path from "path";

// H√†m ƒë·ªÉ t√¨m file subtitle trong th∆∞ m·ª•c
export function findSubtitleFiles(folder) {
  const subtitleExtensions = ['.srt', '.ass', '.ssa', '.vtt'];
  
  if (!fs.existsSync(folder)) {
    return [];
  }

  const files = fs.readdirSync(folder);
  const subtitleFiles = files
    .filter(file => subtitleExtensions.some(ext => file.toLowerCase().endsWith(ext)))
    .map(file => path.join(folder, file))
    .sort();

  return subtitleFiles;
}

// H√†m ƒë·ªÉ t√¨m t·∫•t c·∫£ video trong th∆∞ m·ª•c
export function findVideoFiles(folder) {
  const videoExtensions = ['.mp4', '.avi', '.mov', '.mkv', '.flv', '.wmv', '.webm'];
  
  if (!fs.existsSync(folder)) {
    console.log(`üìÅ T·∫°o th∆∞ m·ª•c: ${folder}`);
    fs.mkdirSync(folder, { recursive: true });
    return [];
  }

  const files = fs.readdirSync(folder);
  const videoFiles = files
    .filter(file => videoExtensions.some(ext => file.toLowerCase().endsWith(ext)))
    .map(file => path.join(folder, file))
    .sort(); // S·∫Øp x·∫øp theo t√™n file

  return videoFiles;
}

// H√†m t·∫°o t√™n output d·ª±a tr√™n timestamp
export function generateOutputName(folder, withSubtitle = false) {
  const timestamp = new Date().toISOString()
    .replace(/[:.]/g, '-')
    .replace('T', '_')
    .split('.')[0];
  const suffix = withSubtitle ? '_with_subtitle' : '';
  // return path.join(folder, `merged_video${suffix}_${timestamp}.mp4`);
  return path.join(folder, `final_video${suffix}.mp4`);
}

// H√†m cleanup file t·∫°m
export function cleanupTempFile(filePath) {
  if (fs.existsSync(filePath)) {
    try { 
      fs.unlinkSync(filePath); 
    } catch (err) {
      console.log(`‚ö†Ô∏è Kh√¥ng th·ªÉ x√≥a file t·∫°m: ${path.basename(filePath)}`);
    }
  }
}

export default function cleanupFileContents(files) {
  files.forEach(file => {
    try {
      fs.writeFileSync(file, '');
      console.log(`üßπ ƒê√£ d·ªçn s·∫°ch n·ªôi dung file: ${file}`);
    } catch (err) {
      console.log(`‚ö†Ô∏è Kh√¥ng th·ªÉ d·ªçn s·∫°ch n·ªôi dung file: ${file}`);
    }
  });
}